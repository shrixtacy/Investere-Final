
import { jsPDF } from "jspdf";
import 'jspdf-autotable';
import { UserOptions } from "jspdf-autotable";

// Extend the jsPDF type definition
declare module "jspdf" {
  interface jsPDF {
    autoTable: (options: UserOptions) => jsPDF;
    lastAutoTable: {
      finalY: number;
    };
  }
}

// Add footer to the PDF document
export const addFooter = (doc: jsPDF, appName: string): void => {
  const pageCount = doc.getNumberOfPages();
  
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i);
    
    // Footer
    doc.setFontSize(8);
    doc.setTextColor(128, 128, 128);
    
    // Add page numbers
    const pageNumber = `Page ${i} of ${pageCount}`;
    const pageWidth = doc.internal.pageSize.getWidth();
    doc.text(pageNumber, pageWidth / 2, doc.internal.pageSize.getHeight() - 10, { align: 'center' });
    
    // Add app name and generation time
    const generationInfo = `Generated by ${appName} | ${new Date().toLocaleString()}`;
    doc.text(generationInfo, pageWidth / 2, doc.internal.pageSize.getHeight() - 5, { align: 'center' });
  }
};

// Add disclaimer to the PDF document
export const addDisclaimer = (doc: jsPDF, y: number): void => {
  doc.setFontSize(9);
  doc.setTextColor(128, 128, 128);
  
  const disclaimer = "DISCLAIMER: This analysis is generated automatically and should not be considered financial advice. " +
    "Information may be inaccurate or outdated. Always consult with a qualified financial advisor before making investment decisions.";
  
  const pageWidth = doc.internal.pageSize.getWidth();
  const splitDisclaimer = doc.splitTextToSize(disclaimer, pageWidth - 30);
  
  doc.text(splitDisclaimer, 15, y);
};
